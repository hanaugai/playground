
https://learn.hashicorp.com/tutorials/terraform/docker-build?in=terraform/docker-get-started

https://www.terraform.io/docs/glossary

- steps
  - terraform init: creating initial files, loading any remote state, downloading modules
  - terraform apply: creates or updates infrastructure
  - terraform destroy

- description ./main.tf
  - a whole file or a set of files are called as terraform configuration
  - it conists of blocks
  - terraform {} block: terraform settings with required providers
    - provider name, its source (= terraform registry path) and version
  - provider {} block
  - resource {} block: defines components of infrastructure
    - two strings before the block: resource type and name (e.g. "docker_image" and "nginx")
      - the type consists two fields of provider name and resource name (e.g. "docker" and "image")
    - the resource ID is defined with dot-concatenate like "docker_image.nginx"
    - block content indicates an argument to the resource

  - output {} block (./outputs.tf): allows persist some customized state as outputs of the work

- state
  - IDs and proprties of the resources
  - the only way terraform can track which resources it manages
    - sometimes it includes sensitive data, so store to secured backend

- other commands
  - terraform init -backend=false: initialize working directory without any accessing any configured remote backend
  - terraform fmt
  - terraform validate: validate configurations syntactically and internal consistently without accessing any remote services such as remote state and provider APIs
  - terraform show: reads and outputs a terraform state or plan file
  - terraform state list
  - terraform apply -var "container_name=YetAnotherName"
  - terraform output -json
