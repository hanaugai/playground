
https://buf.build/docs/tutorials/getting-started-with-buf-cli/

1. configure buf.yaml to manage proto files
2. generate code using buf.gen.yaml
3. lint proto files
4. braking changes

1. configure buf

$ cd proto
$ buf mod init  # generates buf.yaml
$ tree
.
├── memo.txt
└── proto
    ├── buf.yaml
    ├── google
    │   └── type
    │       └── datetime.proto
    └── pet
        └── v1
            └── pet.proto

5 directories, 4 files
$ buf build

2. configure buf.gen.yaml and code gen

$ touch buf.gen.yaml
$ ls
buf.gen.yaml    memo.txt        proto
$ buf generate proto  # generate go codes under gen
$ tree
.
├── buf.gen.yaml
├── gen
│   ├── google
│   │   └── type
│   │       └── datetime.pb.go
│   └── pet
│       └── v1
│           ├── pet.pb.go
│           └── petv1connect
│               └── pet.connect.go
├── memo.txt
└── proto
    ├── buf.yaml
    ├── google
    │   └── type
    │       └── datetime.proto
    └── pet
        └── v1
            └── pet.proto

11 directories, 8 files

3. lint proto

$ buf lint proto
proto/google/type/datetime.proto:17:1:Package name "google.type" should be suffixed with a correctly formed version, such as "google.type.v1".
proto/pet/v1/pet.proto:42:10:Field name "petID" should be lower_snake_case, such as "pet_id".
proto/pet/v1/pet.proto:47:9:Service name "PetStore" should be suffixed with "Service".
$ vim proto/pet/v1/pet.proto
$ vim proto/buf.yaml
$ buf lint proto

4. breaking change
